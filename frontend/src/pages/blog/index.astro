---
import { SITE_TITLE, SITE_DESCRIPTION } from "../../consts";
import FormattedDate from "../../components/FormattedDate.astro";
import type Article from "../../interfaces/article";
import fetchApi from "../../lib/strapi";
import { getImageUrl } from "../../lib/image";
import { ImageStrapiFormat } from "../../interfaces/image";
import GridPage from "../../layouts/GridPage.astro";
import type Category from "../../interfaces/category";

const queryPosts: Record<string, string> = {
    "populate[0]": "cover.attributes",
    "populate[1]": "categories",
};

let posts: Article[] | undefined;
let categories: Category[] | undefined;

try {
    posts = await fetchApi<Article[]>({
        endpoint: "articles", // the content type to fetch
        wrappedByKey: "data", // the key to unwrap the response
        query: queryPosts,
    });

    categories = await fetchApi<Category[]>({
        endpoint: "categories", // the content type to fetch
        wrappedByKey: "data", // the key to unwrap the response
    });
} catch (error: any) {
    console.error("Unable to fetch articles: " + error.message);
}
---

<GridPage title={SITE_TITLE} description={SITE_DESCRIPTION}>
    <div class="prose">
        <div class="title">
            <h1>{SITE_TITLE}</h1>
            <div class="date">
                <span> |</span>
                {
                    categories?.map((category) => (
                        <>
                            <a class="link" href={`/categories/${category.attributes.slug}`}>
                                {category.attributes.name}
                            </a>
                            <span> | </span>
                        </>
                    ))
                }
            </div>
        </div>
        <hr />
    </div>
    {
        posts?.map((post) => (
            <li>
                <a href={`/blog/${post.attributes.slug}/`}>
                    <img
                        width={1020}
                        height={510}
                        src={getImageUrl(
                            ImageStrapiFormat.LARGE,
                            post.attributes.cover.data
                        )}
                        alt=""
                    />
                    <h4 class="title">{post.attributes.title}</h4>
                    <p class="date">
                        <FormattedDate date={post.attributes.publishedAt} />
                    </p>
                </a>
            </li>
        ))
    }
</GridPage>
